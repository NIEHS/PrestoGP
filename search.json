[{"path":"https://niehs.github.io/PrestoGP/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eric Bair. Author, maintainer. Brian Kidd. Author. Eric Wimberley. Author. Deepak Mav. Author. Kyle Messier. Author.","code":""},{"path":"https://niehs.github.io/PrestoGP/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bair E, Kidd B, Wimberley E, Mav D, Messier K (2025). PrestoGP: Penalized Regression Spatio-Temporal Outcomes via Gaussian Processes. R package version 0.2.0.9040, https://github.com/NIEHS/PrestoGP, https://niehs.github.io/PrestoGP/.","code":"@Manual{,   title = {PrestoGP: Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes},   author = {Eric Bair and Brian Kidd and Eric Wimberley and Deepak Mav and Kyle Messier},   year = {2025},   note = {R package version 0.2.0.9040, https://github.com/NIEHS/PrestoGP},   url = {https://niehs.github.io/PrestoGP/}, }"},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes","text":"PrestoGP R package scalable penalized regression spatio-temporal outcomes using Gaussian processes. package includes methods described paper “Scalable penalized spatiotemporal land-use regression ground-level nitrogen dioxide” Messier Katzfuss (2020). package designed handle big data useful large-scale geospatial exposure assessment geophysical modeling. PrestoGP expands methods Messier Katzfuss (2020) include following important feature: Multivariate spatiotemporal outcomes using multivariate Matern Gaussian process. method described paper “valid Matérn class cross-covariance functions multivariate random fields number components” Apanasovich, Genton, Sun (2012). Simultaneous variable selection estimation fixed effects (.e. land-use regression variables) spatiotemporal random effects. method described paper “Scalable penalized spatiotemporal land-use regression ground-level nitrogen dioxide” Messier Katzfuss (2020). Imputation missing outcome data, including outcome data missing due limit detection effects. always, scalability Gaussian Process via General Vecchia approximation described paper “general framework Vecchia approximations Gaussian processes” Katzfuss Guinness (2021).","code":""},{"path":"https://niehs.github.io/PrestoGP/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes","text":"can install development version PrestoGP GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"NIEHS/PrestoGP\")"},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/index.html","id":"data-preprocessing","dir":"","previous_headings":"","what":"Data Preprocessing","title":"Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's y <- soil[,4]                   # predict moisture content X <- as.matrix(soil[,5:9]) locs <- as.matrix(soil[,1:2])"},{"path":"https://niehs.github.io/PrestoGP/index.html","id":"vecchia-model","dir":"","previous_headings":"","what":"Vecchia Model","title":"Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes","text":"","code":"soil.vm <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm <- prestogp_fit(soil.vm, y, X, locs)"},{"path":"https://niehs.github.io/PrestoGP/index.html","id":"impute-missing-ys","dir":"","previous_headings":"","what":"Impute Missing y’s","title":"Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes","text":"","code":"miss <- sample(1:nrow(soil), 20) y.miss <- y y.miss[miss] <- NA soil.vm2 <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm2 <- prestogp_fit(soil.vm, y, X, locs, impute.y = TRUE)"},{"path":"https://niehs.github.io/PrestoGP/index.html","id":"impute-ys-missing-due-to-limit-of-detection","dir":"","previous_headings":"","what":"Impute y’s Missing Due to Limit of Detection","title":"Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes","text":"","code":"soil.lod <- quantile(y, 0.1) y.lod <- y y.lod[y.lod <= soil.lod] <- NA soil.vm3 <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm3 <- prestogp_fit(soil.vm, y, X, locs, impute.y = TRUE, lod = soil.lod)"},{"path":"https://niehs.github.io/PrestoGP/index.html","id":"full-model","dir":"","previous_headings":"","what":"Full Model","title":"Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes","text":"","code":"soil.fm <- new(\"FullModel\") soil.fm <- prestogp_fit(soil.fm, y, X, locs)"},{"path":"https://niehs.github.io/PrestoGP/index.html","id":"multivariate-model","dir":"","previous_headings":"","what":"Multivariate Model","title":"Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes","text":"","code":"ym <- list() ym[[1]] <- soil[,5]             # predict two nitrogen concentration levels ym[[2]] <- soil[,7] Xm <- list() Xm[[1]] <- Xm[[2]] <- as.matrix(soil[,c(4,6,8,9)]) locsm <- list() locsm[[1]] <- locsm[[2]] <- locs  soil.mvm <-  new(\"MultivariateVecchiaModel\", n_neighbors = 10) soil.mvm <- prestogp_fit(soil.mvm, ym, Xm, locsm)"},{"path":"https://niehs.github.io/PrestoGP/index.html","id":"spaceelevation-model","dir":"","previous_headings":"","what":"Space/Elevation Model","title":"Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes","text":"","code":"data(soil250, package=\"geoR\") y2 <- soil250[,7]               # predict pH level X2 <- as.matrix(soil250[,c(4:6,8:22)]) # columns 1+2 are location coordinates; column 3 is elevation locs2 <- as.matrix(soil250[,1:3])  soil.vm2 <- new(\"VecchiaModel\", n_neighbors = 10) # fit separate scale parameters for location and elevation soil.vm2 <- prestogp_fit(soil.vm2, y2, X2, locs2, scaling = c(1, 1, 2))"},{"path":"https://niehs.github.io/PrestoGP/index.html","id":"test-set-prediction","dir":"","previous_headings":"","what":"Test Set Prediction","title":"Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes","text":"","code":"# Create training and test sets n <- length(y) otr <- rep(FALSE, n) otr[sample(1:n, size=floor(n/2))] <- TRUE otst <- !otr       # Fit the model on the training set soil.vmp <- new(\"VecchiaModel\", n_neighbors = 10) soil.vmp <- prestogp_fit(soil.vm, y[otr], X[otr,], locs[otr,])       # Perform predictions on the test set soil.yhat <- prestogp_predict(soil.vmp, X[otst,], locs[otst,])"},{"path":"https://niehs.github.io/PrestoGP/index.html","id":"work-in-progress","dir":"","previous_headings":"","what":"Work In Progress","title":"Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes","text":"package currently development. Please report issues Issues page","code":""},{"path":"https://niehs.github.io/PrestoGP/index.html","id":"multivariate-and-censored-geospatial-models-for-external-exposomics-of-data-sparse-chemicals-united-states-chlorotriazine-groundwater-distributions-from-1990-2022","dir":"","previous_headings":"","what":"Multivariate and Censored Geospatial Models For External Exposomics of Data-Sparse Chemicals: United States Chlorotriazine Groundwater Distributions from 1990-2022","title":"Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes","text":"manuscript progress expected submitted soon. Please check back updates contact Kyle Messier information.","code":""},{"path":"https://niehs.github.io/PrestoGP/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes","text":"Kyle P Messier1,2 Insang Song1,2 Matt W Wheeler2 Myeongjon Kang3 Matthias Katzfuss3 Ruchir R Shah4 Deepak Mav4 Brian Kidd4 Eric Bair4","code":""},{"path":"https://niehs.github.io/PrestoGP/index.html","id":"affiliations","dir":"","previous_headings":"","what":"Affiliations","title":"Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes","text":"National Institute Environmental Health Sciences, Division National Toxicology Program, Predictive Toxicology Branch National Institute Environmental Health Sciences, Division Intramural Research, Biostatistics Computational Biology Branch University Wisconsin, Department Statistics Sciome, LLC","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/FullModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Univariate full PrestoGP model class — FullModel-class","title":"Univariate full PrestoGP model class — FullModel-class","text":"class used create univariate models created likelihood function conditioned observations. See PrestoGPModel description slots.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/FullModel-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Univariate full PrestoGP model class — FullModel-class","text":"","code":"pgp.model <- new(\"FullModel\")"},{"path":"https://niehs.github.io/PrestoGP/reference/MultivariateVecchiaModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate Vecchia PrestoGP model class — MultivariateVecchiaModel-class","title":"Multivariate Vecchia PrestoGP model class — MultivariateVecchiaModel-class","text":"class used create multivariate models likelihood function conditioned subset observations (.e., Vecchia models). See PrestoGPModel description slots.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/MultivariateVecchiaModel-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multivariate Vecchia PrestoGP model class — MultivariateVecchiaModel-class","text":"","code":"pgp.mmodel <- new(\"MultivariateVecchiaModel\", n_neighbors = 25)"},{"path":"https://niehs.github.io/PrestoGP/reference/PrestoGP-package.html","id":null,"dir":"Reference","previous_headings":"","what":"PrestoGP: Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes — PrestoGP-package","title":"PrestoGP: Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes — PrestoGP-package","text":"Simultaneous variable seletion estimation LUR models spatiotemporally correlated errors scalable big data.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/PrestoGP-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"PrestoGP: Penalized Regression for Spatio-Temporal Outcomes via Gaussian Processes — PrestoGP-package","text":"Maintainer: Eric Bair eric.bair@sciome.com Authors: Brian Kidd Eric Wimberley Deepak Mav Kyle Messier","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/PrestoGPModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"PrestoGPModel superclass — PrestoGPModel-class","title":"PrestoGPModel superclass — PrestoGPModel-class","text":"superclass PrestoGP models. types PrestoGP model classes (e.g. VecchiaModel-class FullModel-class inherited class. Normally users create objects class. Instead, use appropriate inherited class type model fitting.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/PrestoGPModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"PrestoGPModel superclass — PrestoGPModel-class","text":"covparams numeric vector containing parameters Matern model. logparams numeric vector containing transformed versions Matern parameters (used internally likelihood calculations). beta column matrix containing regression coefficients. lambda_1se_idx Stores index optimal tuning parameter glmnet model. See glmnet. vecchia_approx output Vecchia specify function. See vecchia_specify vecchia_Mspecify. X_train matrix containing original predictors. \"super matrix\" multivariate models. See superMatrix. Y_train column matrix containing original response values. fitting model, missing values replaced imputed values impute.y TRUE. See link{prestogp_fit}. X_ndx vector used find elements beta corresponding specific outcomes. ith element X_ndx index last element beta corresponding predictors outcome . Y_bar vector containing means outcome. Y_obs logical vector used track values Y non-missing. X_tilde matrix transformed predictors. y_tilde column matrix containing transformed response values. res numeric vector residuals. locs_train list containing location coordinates. element list corresponds different outcome. (list length 1 univariate models.) linear_model glmnet model. See glmnet cv.glmnet. converged model fitting process converge (boolean)? LL_Vecchia_krig value negative log likelihood function optimization. error Penalized model error. See References details. n_neighbors Number neighbors condition Vecchia approximation. Ignored full models. min_m Minimum permissible number neighbors. alpha Parameter alpha glmnet. See glmnet. scaling indices scale parameters. See link{prestogp_fit}. nscale number scale parameters model. common_scale columns locs scale parameter? param_sequence Records indices various Matern parameters. See create_param_sequence.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/PrestoGPModel-class.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PrestoGPModel superclass — PrestoGPModel-class","text":"Apanasovich, T.V., Genton, M.G. Sun, Y. \"valid Matérn class cross-covariance functions multivariate random fields number components\", Journal American Statistical Association (2012) 107(497):180-193. Messier, K.P. Katzfuss, M. \"Scalable penalized spatiotemporal land-use regression ground-level nitrogen dioxide\", Annals Applied Statistics (2021) 15(2):688-710.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/PrestoGPModel-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PrestoGPModel superclass — PrestoGPModel-class","text":"","code":"pgp.vmodel <- new(\"VecchiaModel\", n_neighbors = 25) pgp.fmodel <- new(\"FullModel\") pgp.mmodel <- new(\"MultivariateVecchiaModel\", n_neighbors = 25)"},{"path":"https://niehs.github.io/PrestoGP/reference/VecchiaModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Univariate Vecchia PrestoGP model class — VecchiaModel-class","title":"Univariate Vecchia PrestoGP model class — VecchiaModel-class","text":"class used create univariate models likelihood function conditioned subset observations (.e., Vecchia models). See PrestoGPModel description slots.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/VecchiaModel-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Univariate Vecchia PrestoGP model class — VecchiaModel-class","text":"","code":"pgp.model <- new(\"VecchiaModel\", n_neighbors = 25)"},{"path":"https://niehs.github.io/PrestoGP/reference/createUMultivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the sparse triangular matrix U for multivariate Vecchia models — createUMultivariate","title":"Create the sparse triangular matrix U for multivariate Vecchia models — createUMultivariate","text":"creates sparse triangular matrix U multivariate Vecchia models. matrix can used estimate likelihood transform data iid. function multivariate version createU.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/createUMultivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the sparse triangular matrix U for multivariate Vecchia models — createUMultivariate","text":"","code":"createUMultivariate(vec.approx, params, cov_func = NULL)"},{"path":"https://niehs.github.io/PrestoGP/reference/createUMultivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the sparse triangular matrix U for multivariate Vecchia models — createUMultivariate","text":"vec.approx Object returned vecchia_Mspecify. params Vector covariance parameters. See create_param_sequence examples details format vector. cov_func function used compute covariance two observations. Defaults Matern model.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/createUMultivariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the sparse triangular matrix U for multivariate Vecchia models — createUMultivariate","text":"list containing sparse upper trianguler U, plus additional objects required functions.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/createUMultivariate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create the sparse triangular matrix U for multivariate Vecchia models — createUMultivariate","text":"function much slower non-default cov_func specified. importantly, guarantee resulting covariance matrices positive definite. recommend using default (Matern) covariance function unless know exactly . See Apanasovich et al. (2012) description cross-covariances computed.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/createUMultivariate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create the sparse triangular matrix U for multivariate Vecchia models — createUMultivariate","text":"Apanasovich, T.V., Genton, M.G. Sun, Y. \"valid Matérn class cross-covariance functions multivariate random fields number components\", Journal American Statistical Association (2012) 107(497):180-193. Katzfuss, M., Guinness, J. \"general framework Vecchia approximations Gaussian processes\", Statistical Science (2021) 36(1):124-141.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/createUMultivariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the sparse triangular matrix U for multivariate Vecchia models — createUMultivariate","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's locs <- as.matrix(soil[,1:2]) locsm <- list() locsm[[1]] <- locsm[[2]] <- locs soil.va <- vecchia_Mspecify(locsm, m=10)  pseq <- create_param_sequence(2) # Initialize the vector of covariance parameters params <- rep(NA, pseq[5,2]) # Sigma parameters: params[pseq[1,1]:pseq[1,2]] <- c(100, 80) # Scale parameters: params[pseq[2,1]:pseq[2,2]] <- c(60, 50) # Smoothness parameters: params[pseq[3,1]:pseq[3,2]] <- c(0.5, 0.5) # Nuggets: params[pseq[4,1]:pseq[4,2]] <- c(30, 30) # Correlation: params[pseq[5,1]:pseq[5,2]] <- -0.9  soil.u <- createUMultivariate(soil.va, params)"},{"path":"https://niehs.github.io/PrestoGP/reference/create_param_sequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract specific Matern parameters from a parameter sequence — create_param_sequence","title":"Extract specific Matern parameters from a parameter sequence — create_param_sequence","text":"function used obtain specific Matern parameters (e.g., range smoothness) covparams slot PrestoGPModel object.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/create_param_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract specific Matern parameters from a parameter sequence — create_param_sequence","text":"","code":"create_param_sequence(P, ns = 1)"},{"path":"https://niehs.github.io/PrestoGP/reference/create_param_sequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract specific Matern parameters from a parameter sequence — create_param_sequence","text":"P Number outcome variables ns Number scale parameters","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/create_param_sequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract specific Matern parameters from a parameter sequence — create_param_sequence","text":"matrix five rows two columns described : Row 1: Starting ending indices sigma parameter(s) Row 2: Starting ending indices scale parameter(s) Row 3: Starting ending indices smoothness parameter(s) Row 4: Starting ending indices nugget(s) Row 5: Starting ending indices correlation parameter(s)","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/create_param_sequence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract specific Matern parameters from a parameter sequence — create_param_sequence","text":"function intended advanced users want specify input Matern parameters functions vecchia_Mlikelihood createUMultivariate. extract Matern parameters fitted PrestoGP model, strongly recommended use link{get_theta} instead.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/create_param_sequence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract specific Matern parameters from a parameter sequence — create_param_sequence","text":"Apanasovich, T.V., Genton, M.G. Sun, Y. \"valid Matérn class cross-covariance functions multivariate random fields number components\", Journal American Statistical Association (2012) 107(497):180-193. Genton, M.G. \"Classes kernels machine learning: statistics perspective\", Journal Machine Learning Research (2001) 2:299-312.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/create_param_sequence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract specific Matern parameters from a parameter sequence — create_param_sequence","text":"","code":"# Space/elevation model data(soil250, package=\"geoR\") y2 <- soil250[,7]               # predict pH level X2 <- as.matrix(soil250[,c(4:6,8:22)]) # columns 1+2 are location coordinates; column 3 is elevation locs2 <- as.matrix(soil250[,1:3])  soil.vm2 <- new(\"VecchiaModel\", n_neighbors = 10) # fit separate scale parameters for location and elevation soil.vm2 <- prestogp_fit(soil.vm2, y2, X2, locs2, scaling = c(1, 1, 2)) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: -254.4925  #> Current MSE: 0.009739877  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: -254.4925  #> Current MSE: 0.01017229   pseq <- create_param_sequence(1, 2) soil2.params <- soil.vm2@covparams # sigma soil2.params[pseq[1,1]:pseq[1,2]] #> [1] 0.005850106 # scale parameters soil2.params[pseq[2,1]:pseq[2,2]] #> [1] 7.04081881 0.07812963 # smoothness parameter soil2.params[pseq[3,1]:pseq[3,2]] #> [1] 1.167065 # nugget soil2.params[pseq[4,1]:pseq[4,2]] #> [1] 0.004038009  # Multivariate model ym <- list() ym[[1]] <- soil250[,4] # predict sand/silt portion of the sample ym[[2]] <- soil250[,5] ym[[3]] <- soil250[,6] Xm <- list() Xm[[1]] <- Xm[[2]] <- Xm[[3]] <- as.matrix(soil250[,7:22]) locsm <- list() locsm[[1]] <- locsm[[2]] <- locsm[[3]] <- as.matrix(soil250[,1:3])  soil.mvm <-  new(\"MultivariateVecchiaModel\", n_neighbors = 10) soil.mvm <- prestogp_fit(soil.mvm, ym, Xm, locsm) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 1077.458  #> Current MSE: 2.38111  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 1026.008  #> Current MSE: 3.738481  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 1020.135  #> Current MSE: 3.961958  #> Beginning iteration 4  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 4 complete  #> Current penalized negative log likelihood: 1018.501  #> Current MSE: 4.09541  #> Beginning iteration 5  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 5 complete  #> Current penalized negative log likelihood: 1018.501  #> Current MSE: 4.220799   pseq <- create_param_sequence(3, 2) soil.params <- soil.mvm@covparams # sigmas soil.params[pseq[1,1]:pseq[1,2]] #> [1] 0.7178631 5.8137600 9.5754928 # scale parameters scale.seq <- pseq[2,1]:pseq[2,2] # scale parameter for location, outcome 1 soil.params[scale.seq[1]] #> [1] 13.09338 # scale parameter for elevation, outcome 1 soil.params[scale.seq[2]] #> [1] 19.73042 # scale parameter for location, outcome 2 soil.params[scale.seq[3]] #> [1] 18.48061 # scale parameter for elevation, outcome 2 soil.params[scale.seq[4]] #> [1] 0.4919777 # scale parameter for location, outcome 3 soil.params[scale.seq[5]] #> [1] 0.5017857 # scale parameter for elevation, outcome 3 soil.params[scale.seq[6]] #> [1] 0.5202431 # smoothness parameters soil.params[pseq[3,1]:pseq[3,2]] #> [1] 0.1079127 0.3079058 0.2777398 # nuggets soil.params[pseq[4,1]:pseq[4,2]] #> [1] -0.1754727 -0.3717984 -0.8519659 # correlation soil.corr <- diag(2) / 2 soil.corr[upper.tri(soil.corr)] <- soil.params[pseq[5,1]:pseq[5,2]] #> Warning: number of items to replace is not a multiple of replacement length soil.corr <- soil.corr + t(soil.corr)"},{"path":"https://niehs.github.io/PrestoGP/reference/get_Y.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the Y values for a PrestoGP model. — get_Y","title":"Extract the Y values for a PrestoGP model. — get_Y","text":"method extracts values Y PrestoGP model. imputation used fitting model, missing Y's replaced imputed values.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_Y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the Y values for a PrestoGP model. — get_Y","text":"","code":"get_Y(model)  # S4 method for class 'VecchiaModel' get_Y(model)  # S4 method for class 'MultivariateVecchiaModel' get_Y(model)"},{"path":"https://niehs.github.io/PrestoGP/reference/get_Y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the Y values for a PrestoGP model. — get_Y","text":"model PrestoGP model object","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_Y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the Y values for a PrestoGP model. — get_Y","text":"vector list containing values Y. missing Y's replaced imputed values.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_Y.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract the Y values for a PrestoGP model. — get_Y","text":"Messier, K.P. Katzfuss, M. \"Scalable penalized spatiotemporal land-use regression ground-level nitrogen dioxide\", Annals Applied Statistics (2021) 15(2):688-710.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/get_Y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the Y values for a PrestoGP model. — get_Y","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's y <- soil[,4]                   # predict moisture content X <- as.matrix(soil[,5:9]) locs <- as.matrix(soil[,1:2])  soil.vm <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm <- prestogp_fit(soil.vm, y, X, locs) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 487.1692  #> Current MSE: 9.104869  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 487.0956  #> Current MSE: 9.106944  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 487.0956  #> Current MSE: 9.106944  get_Y(soil.vm) #>   [1]  7.233333 14.633333 12.666667 13.733333  7.400000 15.966667 10.266667 #>   [8]  8.033333  9.633333  7.433333  8.966667  7.933333  8.200000  7.700000 #>  [15]  8.933333  7.066667 15.000000  9.766667 10.500000 13.366667 13.700000 #>  [22] 12.866667 22.300000 14.600000 15.566667 17.066667 10.700000  7.233333 #>  [29] 10.700000 12.133333 14.066667  9.700000  8.866667  7.833333  8.633333 #>  [36]  7.566667 13.233333 13.633333 11.233333 12.700000  9.400000  6.966667 #>  [43]  7.533333 12.533333  9.200000  8.833333  9.466667 10.133333  6.933333 #>  [50]  8.533333  8.300000  4.566667  8.450000 11.100000  6.050000 10.950000 #>  [57]  8.700000 14.050000 14.500000 10.250000 11.100000  7.300000 16.200000 #>  [64] 14.950000 13.400000 11.200000  8.750000 13.500000 11.350000 11.050000 #>  [71]  9.500000 10.300000 10.100000  9.200000  8.550000  9.600000 10.600000 #>  [78]  7.233333  9.100000  8.633333  9.366667  8.333333  9.300000 10.766667 #>  [85] 13.266667 15.433333 10.733333 11.400000  9.733333  9.866667 13.166667 #>  [92] 13.633333 11.100000 10.633333 12.400000 11.200000  9.433333 14.000000 #>  [99] 12.300000 15.300000 14.333333 10.400000  9.666667 14.450000 14.833333 #> [106] 13.666667  9.233333 11.850000 12.900000 12.466667 15.566667 13.266667 #> [113] 10.700000 10.666667 12.533333 12.566667 14.366667 12.333333 12.566667 #> [120] 12.600000 11.800000 12.866667  8.225000 12.600000  8.200000  8.850000 #> [127] 12.250000  8.500000  9.450000  8.300000 13.550000  9.650000 11.150000 #> [134] 13.650000 12.800000  8.500000 11.700000 11.150000  5.550000 10.000000 #> [141] 10.100000 10.100000  9.400000  7.550000  8.700000  8.900000  9.700000 #> [148]  6.950000  8.650000 11.400000 12.350000 12.050000 11.950000 11.850000 #> [155] 10.600000 12.450000 13.500000 13.100000  9.300000 11.600000 10.650000 #> [162]  9.300000  9.150000  9.350000 10.733333 16.950000 10.900000 12.766667 #> [169] 15.433333  9.833333 12.466667 13.450000 14.266667 11.566667  6.266667 #> [176] 15.466667 12.500000 13.233333 10.566667 12.166667  8.866667  8.933333 #> [183]  9.066667  8.466667 17.966667 14.800000 19.366667 19.300000 13.733333 #> [190] 13.600000 20.800000  7.966667  8.833333 20.466667 14.700000 15.000000 #> [197] 14.533333 12.066667 18.633333 19.100000"},{"path":"https://niehs.github.io/PrestoGP/reference/get_beta-PrestoGPModel-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the regression coefficients (beta) for a PrestoGP model. — get_beta,PrestoGPModel-method","title":"Extract the regression coefficients (beta) for a PrestoGP model. — get_beta,PrestoGPModel-method","text":"method extracts list containing regression coefficients PrestoGP model.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_beta-PrestoGPModel-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the regression coefficients (beta) for a PrestoGP model. — get_beta,PrestoGPModel-method","text":"","code":"# S4 method for class 'PrestoGPModel' get_beta(model)"},{"path":"https://niehs.github.io/PrestoGP/reference/get_beta-PrestoGPModel-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the regression coefficients (beta) for a PrestoGP model. — get_beta,PrestoGPModel-method","text":"model PrestoGP model object","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_beta-PrestoGPModel-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the regression coefficients (beta) for a PrestoGP model. — get_beta,PrestoGPModel-method","text":"list containing regression coefficients. element list corresponds outcome variable. final element list contains intercept(s).","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_beta-PrestoGPModel-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract the regression coefficients (beta) for a PrestoGP model. — get_beta,PrestoGPModel-method","text":"important note intercepts estimated transformed data. useful making predictions original (untransformed) data. Use prestogp_predict make predictions based PrestoGP model.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_beta-PrestoGPModel-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract the regression coefficients (beta) for a PrestoGP model. — get_beta,PrestoGPModel-method","text":"Messier, K.P. Katzfuss, M. \"Scalable penalized spatiotemporal land-use regression ground-level nitrogen dioxide\", Annals Applied Statistics (2021) 15(2):688-710.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/get_beta-PrestoGPModel-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the regression coefficients (beta) for a PrestoGP model. — get_beta,PrestoGPModel-method","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's y <- soil[,4]                   # predict moisture content X <- as.matrix(soil[,5:9]) locs <- as.matrix(soil[,1:2])  soil.vm <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm <- prestogp_fit(soil.vm, y, X, locs) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 487.3677  #> Current MSE: 9.104869  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 487.1633  #> Current MSE: 9.107341  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 486.8547  #> Current MSE: 9.107155  #> Beginning iteration 4  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 4 complete  #> Current penalized negative log likelihood: 486.8515  #> Current MSE: 9.107404  #> Beginning iteration 5  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 5 complete  #> Current penalized negative log likelihood: 486.8515  #> Current MSE: 9.107404  get_beta(soil.vm) #> $Y #>   NO3.N Total.N   NH4.N     DOC    N20N  #>       0       0       0       0       0  #>  #> $`(Intercept)` #> (Intercept)  #>    11.40697  #>"},{"path":"https://niehs.github.io/PrestoGP/reference/get_converged-PrestoGPModel-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Did the PrestoGP model converge? — get_converged,PrestoGPModel-method","title":"Did the PrestoGP model converge? — get_converged,PrestoGPModel-method","text":"method returns boolean value indicates whether PrestoGP model converged.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_converged-PrestoGPModel-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Did the PrestoGP model converge? — get_converged,PrestoGPModel-method","text":"","code":"# S4 method for class 'PrestoGPModel' get_converged(model)"},{"path":"https://niehs.github.io/PrestoGP/reference/get_converged-PrestoGPModel-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Did the PrestoGP model converge? — get_converged,PrestoGPModel-method","text":"model PrestoGP model object","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_converged-PrestoGPModel-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Did the PrestoGP model converge? — get_converged,PrestoGPModel-method","text":"boolean value indicating whether model converged.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_converged-PrestoGPModel-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Did the PrestoGP model converge? — get_converged,PrestoGPModel-method","text":"Messier, K.P. Katzfuss, M. \"Scalable penalized spatiotemporal land-use regression ground-level nitrogen dioxide\", Annals Applied Statistics (2021) 15(2):688-710.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/get_converged-PrestoGPModel-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Did the PrestoGP model converge? — get_converged,PrestoGPModel-method","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's y <- soil[,4]                   # predict moisture content X <- as.matrix(soil[,5:9]) locs <- as.matrix(soil[,1:2])  soil.vm <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm <- prestogp_fit(soil.vm, y, X, locs) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 487.0635  #> Current MSE: 9.104869  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 486.9276  #> Current MSE: 9.107553  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 486.9215  #> Current MSE: 9.107588  #> Beginning iteration 4  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 4 complete  #> Current penalized negative log likelihood: 486.7486  #> Current MSE: 9.107379  #> Beginning iteration 5  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 5 complete  #> Current penalized negative log likelihood: 486.7473  #> Current MSE: 9.107488  #> Beginning iteration 6  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 6 complete  #> Current penalized negative log likelihood: 486.7473  #> Current MSE: 9.107488  get_converged(soil.vm) #> [1] TRUE"},{"path":"https://niehs.github.io/PrestoGP/reference/get_linear_model-PrestoGPModel-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the fitted linear model for a PrestoGP model — get_linear_model,PrestoGPModel-method","title":"Extract the fitted linear model for a PrestoGP model — get_linear_model,PrestoGPModel-method","text":"method return fitted linear model (class cv.glmnet) PrestoGP model.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_linear_model-PrestoGPModel-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the fitted linear model for a PrestoGP model — get_linear_model,PrestoGPModel-method","text":"","code":"# S4 method for class 'PrestoGPModel' get_linear_model(model)"},{"path":"https://niehs.github.io/PrestoGP/reference/get_linear_model-PrestoGPModel-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the fitted linear model for a PrestoGP model — get_linear_model,PrestoGPModel-method","text":"model PrestoGP model object","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_linear_model-PrestoGPModel-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the fitted linear model for a PrestoGP model — get_linear_model,PrestoGPModel-method","text":"fitted linear model (class cv.glmnet).","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_linear_model-PrestoGPModel-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract the fitted linear model for a PrestoGP model — get_linear_model,PrestoGPModel-method","text":"important note model fit transformed data. CV error rate predicted values Y correct original (untransformed) data. method used primarily examining coefficient path generating plots.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_linear_model-PrestoGPModel-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract the fitted linear model for a PrestoGP model — get_linear_model,PrestoGPModel-method","text":"Messier, K.P. Katzfuss, M. \"Scalable penalized spatiotemporal land-use regression ground-level nitrogen dioxide\", Annals Applied Statistics (2021) 15(2):688-710.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/get_linear_model-PrestoGPModel-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the fitted linear model for a PrestoGP model — get_linear_model,PrestoGPModel-method","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's y <- soil[,4]                   # predict moisture content X <- as.matrix(soil[,5:9]) locs <- as.matrix(soil[,1:2])  soil.vm <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm <- prestogp_fit(soil.vm, y, X, locs) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 487.406  #> Current MSE: 9.104869  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 487.327  #> Current MSE: 9.107651  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 487.327  #> Current MSE: 9.107651  get_linear_model(soil.vm) #>  #> Call:  cv.glmnet(x = as.matrix(model@X_tilde), y = as.matrix(model@y_tilde),      nfolds = nfolds, foldid = foldid, parallel = parallel, alpha = model@alpha,      family = family)  #>  #> Measure: Mean-Squared Error  #>  #>      Lambda Index Measure      SE Nonzero #> min 0.00609    26  0.5031 0.07534       4 #> 1se 0.06238     1  0.5127 0.07052       0"},{"path":"https://niehs.github.io/PrestoGP/reference/get_neighbors-PrestoGPModel-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the number of neighbors for a PrestoGP model. — get_neighbors,PrestoGPModel-method","title":"Extract the number of neighbors for a PrestoGP model. — get_neighbors,PrestoGPModel-method","text":"method extracts number nearest neighbors used compute PrestoGP model.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_neighbors-PrestoGPModel-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the number of neighbors for a PrestoGP model. — get_neighbors,PrestoGPModel-method","text":"","code":"# S4 method for class 'PrestoGPModel' get_neighbors(model)"},{"path":"https://niehs.github.io/PrestoGP/reference/get_neighbors-PrestoGPModel-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the number of neighbors for a PrestoGP model. — get_neighbors,PrestoGPModel-method","text":"model PrestoGP model object","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_neighbors-PrestoGPModel-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the number of neighbors for a PrestoGP model. — get_neighbors,PrestoGPModel-method","text":"(integer) number neighbors used fit model.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_neighbors-PrestoGPModel-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract the number of neighbors for a PrestoGP model. — get_neighbors,PrestoGPModel-method","text":"Messier, K.P. Katzfuss, M. \"Scalable penalized spatiotemporal land-use regression ground-level nitrogen dioxide\", Annals Applied Statistics (2021) 15(2):688-710.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/get_neighbors-PrestoGPModel-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the number of neighbors for a PrestoGP model. — get_neighbors,PrestoGPModel-method","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's y <- soil[,4]                   # predict moisture content X <- as.matrix(soil[,5:9]) locs <- as.matrix(soil[,1:2])  soil.vm <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm <- prestogp_fit(soil.vm, y, X, locs) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 486.9338  #> Current MSE: 9.104869  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 486.4007  #> Current MSE: 9.107254  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 486.3052  #> Current MSE: 9.107421  #> Beginning iteration 4  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 4 complete  #> Current penalized negative log likelihood: 486.0003  #> Current MSE: 9.107235  #> Beginning iteration 5  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 5 complete  #> Current penalized negative log likelihood: 485.9994  #> Current MSE: 9.107302  #> Beginning iteration 6  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 6 complete  #> Current penalized negative log likelihood: 485.9994  #> Current MSE: 9.107302  get_neighbors(soil.vm) #> [1] 10"},{"path":"https://niehs.github.io/PrestoGP/reference/get_pen_loglik-PrestoGPModel-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the penalized log likelihood for a PrestoGP model. — get_pen_loglik,PrestoGPModel-method","title":"Extract the penalized log likelihood for a PrestoGP model. — get_pen_loglik,PrestoGPModel-method","text":"method extracts (negative) penalized log likelihood PrestoGP model.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_pen_loglik-PrestoGPModel-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the penalized log likelihood for a PrestoGP model. — get_pen_loglik,PrestoGPModel-method","text":"","code":"# S4 method for class 'PrestoGPModel' get_pen_loglik(model)"},{"path":"https://niehs.github.io/PrestoGP/reference/get_pen_loglik-PrestoGPModel-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the penalized log likelihood for a PrestoGP model. — get_pen_loglik,PrestoGPModel-method","text":"model PrestoGP model object","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_pen_loglik-PrestoGPModel-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the penalized log likelihood for a PrestoGP model. — get_pen_loglik,PrestoGPModel-method","text":"value (negative) penalized log likelihood. See References details.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_pen_loglik-PrestoGPModel-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract the penalized log likelihood for a PrestoGP model. — get_pen_loglik,PrestoGPModel-method","text":"Messier, K.P. Katzfuss, M. \"Scalable penalized spatiotemporal land-use regression ground-level nitrogen dioxide\", Annals Applied Statistics (2021) 15(2):688-710.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/get_pen_loglik-PrestoGPModel-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the penalized log likelihood for a PrestoGP model. — get_pen_loglik,PrestoGPModel-method","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's y <- soil[,4]                   # predict moisture content X <- as.matrix(soil[,5:9]) locs <- as.matrix(soil[,1:2])  soil.vm <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm <- prestogp_fit(soil.vm, y, X, locs) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 487.2971  #> Current MSE: 9.104869  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 487.1888  #> Current MSE: 9.10734  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 487.1807  #> Current MSE: 9.107123  #> Beginning iteration 4  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 4 complete  #> Current penalized negative log likelihood: 487.1807  #> Current MSE: 9.107112  get_pen_loglik(soil.vm) #> [1] 487.1807"},{"path":"https://niehs.github.io/PrestoGP/reference/get_scaling-PrestoGPModel-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the scaling parameter for a PrestoGP model. — get_scaling,PrestoGPModel-method","title":"Extract the scaling parameter for a PrestoGP model. — get_scaling,PrestoGPModel-method","text":"method extracts scaling parameter PrestoGP model.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_scaling-PrestoGPModel-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the scaling parameter for a PrestoGP model. — get_scaling,PrestoGPModel-method","text":"","code":"# S4 method for class 'PrestoGPModel' get_scaling(model)"},{"path":"https://niehs.github.io/PrestoGP/reference/get_scaling-PrestoGPModel-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the scaling parameter for a PrestoGP model. — get_scaling,PrestoGPModel-method","text":"model PrestoGP model object","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_scaling-PrestoGPModel-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the scaling parameter for a PrestoGP model. — get_scaling,PrestoGPModel-method","text":"vector containing scaling parameter. See prestogp_fit explanation parameter.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_scaling-PrestoGPModel-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract the scaling parameter for a PrestoGP model. — get_scaling,PrestoGPModel-method","text":"Messier, K.P. Katzfuss, M. \"Scalable penalized spatiotemporal land-use regression ground-level nitrogen dioxide\", Annals Applied Statistics (2021) 15(2):688-710.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/get_scaling-PrestoGPModel-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the scaling parameter for a PrestoGP model. — get_scaling,PrestoGPModel-method","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's y <- soil[,4]                   # predict moisture content X <- as.matrix(soil[,5:9]) locs <- as.matrix(soil[,1:2])  soil.vm <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm <- prestogp_fit(soil.vm, y, X, locs) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 487.7717  #> Current MSE: 9.104869  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 487.0868  #> Current MSE: 9.107051  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 487.0868  #> Current MSE: 9.106926  get_scaling(soil.vm) #> [1] 1 1"},{"path":"https://niehs.github.io/PrestoGP/reference/get_theta-PrestoGPModel-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the Matern (theta) parameters from a PrestoGP model. — get_theta,PrestoGPModel-method","title":"Extract the Matern (theta) parameters from a PrestoGP model. — get_theta,PrestoGPModel-method","text":"method extracts list containing Matern variance/covariance parameters PrestoGP model.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_theta-PrestoGPModel-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the Matern (theta) parameters from a PrestoGP model. — get_theta,PrestoGPModel-method","text":"","code":"# S4 method for class 'PrestoGPModel' get_theta(model)"},{"path":"https://niehs.github.io/PrestoGP/reference/get_theta-PrestoGPModel-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the Matern (theta) parameters from a PrestoGP model. — get_theta,PrestoGPModel-method","text":"model PrestoGP model object","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_theta-PrestoGPModel-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the Matern (theta) parameters from a PrestoGP model. — get_theta,PrestoGPModel-method","text":"list containing following elements: sigma: vector containing estimates variance parameter sigma outcome. scale: vector containing estimates scale parameter(s) outcome. smoothness: vector containing estimates smoothness parameter outcome. nuggets: vector containing estimates nugget variance outcome. correlation: matrix containing estimates correlations outcomes. Omitted univariate models.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/get_theta-PrestoGPModel-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract the Matern (theta) parameters from a PrestoGP model. — get_theta,PrestoGPModel-method","text":"Messier, K.P. Katzfuss, M. \"Scalable penalized spatiotemporal land-use regression ground-level nitrogen dioxide\", Annals Applied Statistics (2021) 15(2):688-710. Porcu, E., Bevilacqua, M., Schaback, R., Oates RJ. \"Matérn Model: Journey Statistics, Numerical Analysis Machine Learning\", Statistical Science (2024) 39(3):469-492.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/get_theta-PrestoGPModel-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the Matern (theta) parameters from a PrestoGP model. — get_theta,PrestoGPModel-method","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's y <- soil[,4]                   # predict moisture content X <- as.matrix(soil[,5:9]) locs <- as.matrix(soil[,1:2])  soil.vm <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm <- prestogp_fit(soil.vm, y, X, locs) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 487.4365  #> Current MSE: 9.104869  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 486.9596  #> Current MSE: 9.107139  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 486.9582  #> Current MSE: 9.107241  #> Beginning iteration 4  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 4 complete  #> Current penalized negative log likelihood: 486.9582  #> Current MSE: 9.107241  get_theta(soil.vm) #> $sigma #> [1] 9.712595 #>  #> $scale #> [1] 17.57788 #>  #> $smoothness #> [1] 0.5915136 #>  #> $nuggets #> [1] 0.9085957 #>"},{"path":"https://niehs.github.io/PrestoGP/reference/max_min_ordering.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum minimum distance ordering — max_min_ordering","title":"Maximum minimum distance ordering — max_min_ordering","text":"Returns indices exact maximum-minimum distance ordering. similar order_maxmin_exact function. main difference allows user specify distance function.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/max_min_ordering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum minimum distance ordering — max_min_ordering","text":"","code":"max_min_ordering(locs, dist.func = NULL)"},{"path":"https://niehs.github.io/PrestoGP/reference/max_min_ordering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum minimum distance ordering — max_min_ordering","text":"locs matrix one row per location number columns (x, y, time, etc.). dist.func distance function signature dist(query_location, locations_matrix). Defaults Euclidean distance.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/max_min_ordering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum minimum distance ordering — max_min_ordering","text":"vector indices giving ordering. Element vector index ith location.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/max_min_ordering.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maximum minimum distance ordering — max_min_ordering","text":"Euclidean distance, function return results order_maxmin_exact, much slower large data sets. order_maxmin_exact used instead function distance function Euclidean.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/max_min_ordering.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Maximum minimum distance ordering — max_min_ordering","text":"Katzfuss, M., Guinness, J. \"general framework Vecchia approximations Gaussian processes\", Statistical Science (2021) 36(1):124-141. Guiness, J. \"Permutation methods sharpening Gaussian process approximations\", Technometrics (2018) 60(4):415-429.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/max_min_ordering.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum minimum distance ordering — max_min_ordering","text":"","code":"data(weather) locs <- weather[,3:4] max_min_ordering(locs) #>   [1] 131  97   1  45  82  69 109 155  39   5  81  27 129  89  99  14  29  32 #>  [19]  88   4  52 148 125  58 111 124 113  13  48  44 130  92  84  51  79 100 #>  [37]  41  86  34 116 122  16  11  40 112  57  60 103  26  98 133 108  49   2 #>  [55] 134  95  20 128  65 120  75  54 138 142 153 105  21  56 137  10  61  93 #>  [73] 152  83  47 156   3  24 119  68 140   9  50 135  96 146  91  42 149  37 #>  [91] 110 106  19 141  62 123 151  66  80  38 127 145  53 118  23 104 136  63 #> [109] 114  94  59  55  25 126  87  30 157  18  70 101  64 139 115 107  33   7 #> [127]  71  90 144 117  17  31 121 143  78  73  22 154 102  43  36 132  67  85 #> [145]  77  35 147  74 150  46  72  15   8  76  12  28   6"},{"path":"https://niehs.github.io/PrestoGP/reference/plot_beta-PrestoGPModel-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the glide path for the coefficients for a PrestoGP model. — plot_beta,PrestoGPModel-method","title":"Plots the glide path for the coefficients for a PrestoGP model. — plot_beta,PrestoGPModel-method","text":"method generates plot showing coefficients model different values tuning parameter. wrapper plot.glmnet.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/plot_beta-PrestoGPModel-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the glide path for the coefficients for a PrestoGP model. — plot_beta,PrestoGPModel-method","text":"","code":"# S4 method for class 'PrestoGPModel' plot_beta(model, ...)"},{"path":"https://niehs.github.io/PrestoGP/reference/plot_beta-PrestoGPModel-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the glide path for the coefficients for a PrestoGP model. — plot_beta,PrestoGPModel-method","text":"model PrestoGP model object ... Additional parameters plot.glmnet","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/plot_beta-PrestoGPModel-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plots the glide path for the coefficients for a PrestoGP model. — plot_beta,PrestoGPModel-method","text":"Messier, K.P. Katzfuss, M. \"Scalable penalized spatiotemporal land-use regression ground-level nitrogen dioxide\", Annals Applied Statistics (2021) 15(2):688-710.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/plot_beta-PrestoGPModel-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots the glide path for the coefficients for a PrestoGP model. — plot_beta,PrestoGPModel-method","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's y <- soil[,4]                   # predict moisture content X <- as.matrix(soil[,5:9]) locs <- as.matrix(soil[,1:2])  soil.vm <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm <- prestogp_fit(soil.vm, y, X, locs) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 487.2212  #> Current MSE: 9.104869  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 487.1424  #> Current MSE: 9.107437  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 487.1424  #> Current MSE: 9.107472  plot_beta(soil.vm)"},{"path":"https://niehs.github.io/PrestoGP/reference/prestogp_fit-PrestoGPModel-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a PrestoGP model. — prestogp_fit,PrestoGPModel-method","title":"Train a PrestoGP model. — prestogp_fit,PrestoGPModel-method","text":"method fits PrestoGP model given set locations predictor outcome variables.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/prestogp_fit-PrestoGPModel-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a PrestoGP model. — prestogp_fit,PrestoGPModel-method","text":"","code":"# S4 method for class 'PrestoGPModel' prestogp_fit(   model,   Y,   X,   locs,   Y.names = NULL,   X.names = NULL,   scaling = NULL,   common_scale = NULL,   covparams = NULL,   beta.hat = NULL,   tol = 0.999999,   max_iters = 100,   center.y = NULL,   impute.y = FALSE,   lod = NULL,   quiet = FALSE,   verbose = FALSE,   optim.method = \"Nelder-Mead\",   optim.control = list(trace = 0, reltol = 0.001, maxit = 5000),   family = c(\"gaussian\", \"binomial\"),   nfolds = 10,   foldid = NULL,   parallel = FALSE )"},{"path":"https://niehs.github.io/PrestoGP/reference/prestogp_fit-PrestoGPModel-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a PrestoGP model. — prestogp_fit,PrestoGPModel-method","text":"model PrestoGP model object fit. Y values response variable(s). matrix vector univariate models list multivariate models. X values predictor variable(s). matrix univariate models list multivariate models. locs values locations. matrix univariate models list multivariate models. Y.names name(s) response variable(s). vector length equal number response variables. Defaults NULL. X.names names predictor variables. vector univariate models list multivariate models. scaling vector consecutive positive integers used specify columns locs scaling parameter. example, spatiotemporal model two spatial measures time measure, value scaling c(1, 1, 2). length scaling must match number columns locs. specified, columns locs common scale parameter. common_scale columsn locs common scales parameter? See Details effects parameter. Defaults TRUE one scale parameter outcome FALSE otherwise. covparams initial covariance parameters estimate (optional). beta.hat initial beta parameters estimates (optional). tol model considered converged error less tol*previous_error (optional). Defaults 0.999999. max_iters Maximum number iterations model fitting procedure. Defaults 100. center.y Y's mean centered fitting model? Defaults TRUE gaussian models FALSE binomial models. impute.y missing Y's imputed? Defaults FALSE. lod Limit detection value(s). Y value less lod assumed missing performing missing data imputation. numeric univariate models list multivariate models, element list corresponds outcome. ith element lod limit detection observation . Alternatively, one can specify single limit detection assumed observations. specified, assumed limit detection exists. Ignored impute.y FALSE. quiet FALSE, penalized log likelihood model MSE printed iteration model fitting procedure. intermediate output printed TRUE. Defaults FALSE. verbose TRUE, estimated theta/beta parameters printed iteration model fitting procedure. Defaults FALSE. Ignored quiet TRUE. optim.method Optimization method used maximum likelihood estimation passed optim. Defaults \"Nelder-Mead\". See optim. optim.control Control parameter passed optim. See optim. family Family parameter glmnet model. Currently \"gaussian\" \"binomial\" supported. Defaults \"gaussian\". See glmnet. nfolds Number cross-validation folds cv.glmnet. Defaults 10. See cv.glmnet. foldid Optional vector values 1 \"nfolds\" specifying fold observation assigned cv.glmnet cross-validation. See cv.glmnet. parallel cv.glmnet use parallel \"foreach\" fit fold? Defaults FALSE. See cv.glmnet.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/prestogp_fit-PrestoGPModel-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a PrestoGP model. — prestogp_fit,PrestoGPModel-method","text":"PrestoGPModel object slots updated based results model fitting procedure. See PrestoGPModel-class details.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/prestogp_fit-PrestoGPModel-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Train a PrestoGP model. — prestogp_fit,PrestoGPModel-method","text":"common_scale TRUE, multivariate models use Matern cross-covariance function described Apanasovich et al. (2012). model can used outcome single scale parameter. common_scale FALSE, column locs divded corresponding element scaling, cross-covariance computed assumption scale parameters equal 1. univariate models, Vecchia approximation recomputed iteration model fitting procedure common_scale TRUE, parameter otherwise ignored.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/prestogp_fit-PrestoGPModel-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Train a PrestoGP model. — prestogp_fit,PrestoGPModel-method","text":"Apanasovich, T.V., Genton, M.G. Sun, Y. \"valid Matérn class cross-covariance functions multivariate random fields number components\", Journal American Statistical Association (2012) 107(497):180-193. Messier, K.P. Katzfuss, M. \"Scalable penalized spatiotemporal land-use regression ground-level nitrogen dioxide\", Annals Applied Statistics (2021) 15(2):688-710.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/prestogp_fit-PrestoGPModel-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train a PrestoGP model. — prestogp_fit,PrestoGPModel-method","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's y <- soil[,4]                   # predict moisture content X <- as.matrix(soil[,5:9]) locs <- as.matrix(soil[,1:2])  # Vecchia model soil.vm <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm <- prestogp_fit(soil.vm, y, X, locs) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 487.1218  #> Current MSE: 9.104869  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 486.8642  #> Current MSE: 9.107255  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 486.8608  #> Current MSE: 9.107399  #> Beginning iteration 4  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 4 complete  #> Current penalized negative log likelihood: 486.8608  #> Current MSE: 9.107144   # Impute missing y's miss <- sample(1:nrow(soil), 20) y.miss <- y y.miss[miss] <- NA soil.vm2 <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm2 <- prestogp_fit(soil.vm, y, X, locs, impute.y = TRUE) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 487.4943  #> Current MSE: 9.104869  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 486.0786  #> Current MSE: 9.10689  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 486.0459  #> Current MSE: 9.107321  #> Beginning iteration 4  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 4 complete  #> Current penalized negative log likelihood: 486.0459  #> Current MSE: 9.107332   # Impute y's missing due to limit of detection soil.lod <- quantile(y, 0.1) y.lod <- y y.lod[y.lod <= soil.lod] <- NA soil.vm3 <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm3 <- prestogp_fit(soil.vm, y, X, locs, impute.y = TRUE, lod = soil.lod) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 486.9157  #> Current MSE: 9.104869  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 486.8326  #> Current MSE: 9.107488  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 486.8326  #> Current MSE: 9.107488   # Full model soil.fm <- new(\"FullModel\") soil.fm <- prestogp_fit(soil.fm, y, X, locs) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 487.4468  #> Current MSE: 9.104869  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 487.1383  #> Current MSE: 9.105487  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 486.8587  #> Current MSE: 9.105398  #> Beginning iteration 4  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 4 complete  #> Current penalized negative log likelihood: 486.8587  #> Current MSE: 9.105299   # Multivariate model ym <- list() ym[[1]] <- soil[,5]             # predict two nitrogen concentration levels ym[[2]] <- soil[,7] Xm <- list() Xm[[1]] <- Xm[[2]] <- as.matrix(soil[,c(4,6,8,9)]) locsm <- list() locsm[[1]] <- locsm[[2]] <- locs  soil.mvm <-  new(\"MultivariateVecchiaModel\", n_neighbors = 10) soil.mvm <- prestogp_fit(soil.mvm, ym, Xm, locsm) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 1364.519  #> Current MSE: 51.86611  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 1364.347  #> Current MSE: 93.89112  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 1359.387  #> Current MSE: 215.5785  #> Beginning iteration 4  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 4 complete  #> Current penalized negative log likelihood: 1359.387  #> Current MSE: 269.6715   # Space/elevation model data(soil250, package=\"geoR\") y2 <- soil250[,7]               # predict pH level X2 <- as.matrix(soil250[,c(4:6,8:22)]) # columns 1+2 are location coordinates; column 3 is elevation locs2 <- as.matrix(soil250[,1:3])  soil.vm2 <- new(\"VecchiaModel\", n_neighbors = 10) # fit separate scale parameters for location and elevation soil.vm2 <- prestogp_fit(soil.vm2, y2, X2, locs2, scaling = c(1, 1, 2)) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: -256.9126  #> Current MSE: 0.009255459  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: -256.9126  #> Current MSE: 0.01129569"},{"path":"https://niehs.github.io/PrestoGP/reference/prestogp_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction for PrestoGP models — prestogp_predict","title":"Prediction for PrestoGP models — prestogp_predict","text":"fitting PrestoGP model, method can used make predictions independent test set (consisting new locations new values predictor variables).","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/prestogp_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction for PrestoGP models — prestogp_predict","text":"","code":"prestogp_predict(   model,   X = \"matrix\",   locs = \"matrix\",   m = \"numeric\",   ordering.pred = c(\"obspred\", \"general\"),   pred.cond = c(\"independent\", \"general\"),   return.values = c(\"mean\", \"meanvar\") )  # S4 method for class 'VecchiaModel' prestogp_predict(   model,   X = \"matrix\",   locs = \"matrix\",   m = NULL,   ordering.pred = c(\"obspred\", \"general\"),   pred.cond = c(\"independent\", \"general\"),   return.values = c(\"mean\", \"meanvar\") )  # S4 method for class 'FullModel' prestogp_predict(   model,   X = \"matrix\",   locs = \"matrix\",   m = NULL,   ordering.pred = c(\"obspred\", \"general\"),   pred.cond = c(\"independent\", \"general\"),   return.values = c(\"mean\", \"meanvar\") )  # S4 method for class 'MultivariateVecchiaModel' prestogp_predict(   model,   X = \"matrix\",   locs = \"matrix\",   m = NULL,   ordering.pred = c(\"obspred\", \"general\"),   pred.cond = c(\"independent\", \"general\"),   return.values = c(\"mean\", \"meanvar\") )"},{"path":"https://niehs.github.io/PrestoGP/reference/prestogp_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction for PrestoGP models — prestogp_predict","text":"model PrestoGP model object obtained running link{prestogp_fit}. X values predictor variable(s) prediction performed. matrix univariate models list multivariate models. locs locations prediction performed. matrix univariate models list multivariate models. m number neighbors condition . specified, default value m used fit model. ordering.pred \"obspred\" \"general\" ordering used prediction? See vecchia_specify vecchia_Mspecify. Defaults \"obspred\". pred.cond prediction conditioning \"general\" \"indepedent\"? See vecchia_specify vecchia_Mspecify. Defaults \"independent\". return.values Values returned. Possible values include \"mean\" \"meanvar\". See vecchia_prediction vecchia_Mprediction. Defaults \"mean\".","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/prestogp_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction for PrestoGP models — prestogp_predict","text":"list containing estimated mean values (requested) standard deviations predictions.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/prestogp_predict.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prediction for PrestoGP models — prestogp_predict","text":"important note variance estimates produced function assume Matern covariance parameters fixed known. consider variance resulting estimating covariance parameters regression coefficients PrestoGP models. variance estimates anticonservative cases (warning returned estimates calculated). Prediction currently implemented full models. function return error applied full model.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/prestogp_predict.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Prediction for PrestoGP models — prestogp_predict","text":"Katzfuss, M., Guinness, J. \"general framework Vecchia approximations Gaussian processes\", Statistical Science (2021) 36(1):124-141. Katzfuss, M., Guinness, J., Gong, W. Zilber, D. \"Vecchia approximations Gaussian-process predictions\", Journal Agricultural, Biological Environmental Statistics (2020) 25:383-414. Messier, K.P. Katzfuss, M. \"Scalable penalized spatiotemporal land-use regression ground-level nitrogen dioxide\", Annals Applied Statistics (2021) 15(2):688-710.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/prestogp_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction for PrestoGP models — prestogp_predict","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's y <- soil[,4]                   # predict moisture content X <- as.matrix(soil[,5:9]) locs <- as.matrix(soil[,1:2])  # Create training and test sets n <- length(y) otr <- rep(FALSE, n) otr[sample(1:n, size=floor(n/2))] <- TRUE otst <- !otr  # Fit the model on the training set soil.vm <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm <- prestogp_fit(soil.vm, y[otr], X[otr,], locs[otr,]) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 246.8011  #> Current MSE: 8.672454  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 246.7207  #> Current MSE: 8.673471  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 246.7031  #> Current MSE: 8.673587  #> Beginning iteration 4  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 4 complete  #> Current penalized negative log likelihood: 246.7031  #> Current MSE: 8.673571   # Perform predictions on the test set soil.yhat <- prestogp_predict(soil.vm, X[otst,], locs[otst,])"},{"path":"https://niehs.github.io/PrestoGP/reference/show-PrestoGPModel-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show method for PrestoGP models — show,PrestoGPModel-method","title":"show method for PrestoGP models — show,PrestoGPModel-method","text":"method prints summary PrestoGP model parameters.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/show-PrestoGPModel-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show method for PrestoGP models — show,PrestoGPModel-method","text":"","code":"# S4 method for class 'PrestoGPModel' show(object)"},{"path":"https://niehs.github.io/PrestoGP/reference/show-PrestoGPModel-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show method for PrestoGP models — show,PrestoGPModel-method","text":"object PrestoGP model object","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/show-PrestoGPModel-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"show method for PrestoGP models — show,PrestoGPModel-method","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's y <- soil[,4]                   # predict moisture content X <- as.matrix(soil[,5:9]) locs <- as.matrix(soil[,1:2])  soil.vm <- new(\"VecchiaModel\", n_neighbors = 10) soil.vm <- prestogp_fit(soil.vm, y, X, locs) #>  #> Estimating initial beta...  #> Estimation of initial beta complete  #>  #> Beginning iteration 1  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 1 complete  #> Current penalized negative log likelihood: 486.7002  #> Current MSE: 9.104869  #> Beginning iteration 2  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 2 complete  #> Current penalized negative log likelihood: 486.3541  #> Current MSE: 9.107815  #> Beginning iteration 3  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 3 complete  #> Current penalized negative log likelihood: 486.3306  #> Current MSE: 9.108282  #> Beginning iteration 4  #> Estimating theta...  #> Estimation of theta complete  #> Estimating beta...  #> Estimation of beta complete  #> Iteration 4 complete  #> Current penalized negative log likelihood: 486.3306  #> Current MSE: 9.108079  show(soil.vm) #> Matern covariance parameters (theta):  #> $sigma #> [1] 9.726825 #>  #> $scale #> [1] 14.74194 #>  #> $smoothness #> [1] 0.7231443 #>  #> $nuggets #> [1] 0.9498517 #>  #> Regression coefficients (beta):  #> $Y #> named numeric(0) #>  #> $`(Intercept)` #> (Intercept)  #>    11.41328  #>  #> Model type: VecchiaModel  #> Nearest neighbors: 10  #> Scaling: 1 1  #> Penalized likelihood: 486.3306  #> MSE: 9.108079"},{"path":"https://niehs.github.io/PrestoGP/reference/soil.html","id":null,"dir":"Reference","previous_headings":"","what":"Soil data from North Bavaria, Germany — soil","title":"Soil data from North Bavaria, Germany — soil","text":"Soil physical chemical data collected field Weissenstaedter Becken, Germany","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/soil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soil data from North Bavaria, Germany — soil","text":"","code":"data(soil)"},{"path":"https://niehs.github.io/PrestoGP/reference/soil.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Soil data from North Bavaria, Germany — soil","text":"data frame following columns: x.coord: x coordinate (cm) y.coord: y coordinate (cm) nr: Sample number. order sample number corresponds order samples collected. moisture: Moisture content (Kg/Kg * 100%) NO3.N: Nitrate nitrogen (mg/Kg) Total.N: Total nitrogen (mg/Kg) NH4.N: Ammonium nitrogen (mg/Kg) DOC: Dissolved organic carbon (mg/Kg) N20N: Nitrous oxide (mg/Kg dried substance)","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/soil.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Soil data from North Bavaria, Germany — soil","text":"data collected Wolfgang Falk, Soil Physics Group, University Bayreuth, Germany. data set previously published \"RandomFields\" R package.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/soil.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Soil data from North Bavaria, Germany — soil","text":"technical reasons data obtained differences two measurements (available anymore). Therefore, data negative values.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/soil.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Soil data from North Bavaria, Germany — soil","text":"Falk, W. \"Kleinskalige raeumliche Variabilitaet von Lachgas und bodenchemischen Parameters (Small scale spatial variability nitrous oxide pedo-chemical parameters)\" (2000). Master thesis, University Bayreuth, Germany.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/soil.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Soil data from North Bavaria, Germany — soil","text":"Martin Schlather, School Business Informatics Mathematics, University Mannheim","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way.   enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions).   simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[.   Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround.   Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually :   Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mlikelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of the multivariate Vecchia likelihood — vecchia_Mlikelihood","title":"Evaluation of the multivariate Vecchia likelihood — vecchia_Mlikelihood","text":"function used evaluate multivariate Vecchia likelihood.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mlikelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of the multivariate Vecchia likelihood — vecchia_Mlikelihood","text":"","code":"vecchia_Mlikelihood(z, vecchia.approx, covparams)"},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mlikelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of the multivariate Vecchia likelihood — vecchia_Mlikelihood","text":"z observed data. vecchia.approx Vecchia object returned vecchia_Mspecify. covparams Vector covariance parameters. See create_param_sequence examples details format vector.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mlikelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of the multivariate Vecchia likelihood — vecchia_Mlikelihood","text":"log likelihood implied multivariate Vecchia approximation.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mlikelihood.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Evaluation of the multivariate Vecchia likelihood — vecchia_Mlikelihood","text":"Katzfuss, M., Guinness, J. \"general framework Vecchia approximations Gaussian processes\", Statistical Science (2021) 36(1):124-141.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mlikelihood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluation of the multivariate Vecchia likelihood — vecchia_Mlikelihood","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's locs <- as.matrix(soil[,1:2]) locsm <- list() locsm[[1]] <- locsm[[2]] <- locs soil.va <- vecchia_Mspecify(locsm, m=10)  pseq <- create_param_sequence(2) # Initialize the vector of covariance parameters params <- rep(NA, pseq[5,2]) # Sigma parameters: params[pseq[1,1]:pseq[1,2]] <- c(100, 80) # Scale parameters: params[pseq[2,1]:pseq[2,2]] <- c(60, 50) # Smoothness parameters: params[pseq[3,1]:pseq[3,2]] <- c(0.5, 0.5) # Nuggets: params[pseq[4,1]:pseq[4,2]] <- c(30, 30) # Correlation: params[pseq[5,1]:pseq[5,2]] <- -0.9  vecchia_Mlikelihood(rnorm(nrow(locs)), soil.va, params) #> [1] NA"},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mprediction.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate Vecchia prediction — vecchia_Mprediction","title":"Multivariate Vecchia prediction — vecchia_Mprediction","text":"function used make predictions based multivariate Vecchia models. multivariate version vecchia_prediction.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mprediction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate Vecchia prediction — vecchia_Mprediction","text":"","code":"vecchia_Mprediction(   z,   vecchia.approx,   covparms,   var.exact = NULL,   return.values = \"mean\" )"},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mprediction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariate Vecchia prediction — vecchia_Mprediction","text":"z observed data. vecchia.approx Vecchia object returned vecchia_Mspecify. covparms Vector covariance parameters. See create_param_sequence examples details format vector. var.exact prediction variances computed exactly, (faster) approximation acceptable? See vecchia_prediction. return.values Values returned. Possible values include \"mean\", \"meanvar\", \"meanmat\", \"\". See vecchia_prediction. Defaults \"mean\".","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mprediction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate Vecchia prediction — vecchia_Mprediction","text":"posterior means/variances/V matrices observed unobserved locations. See vecchia_prediction.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mprediction.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multivariate Vecchia prediction — vecchia_Mprediction","text":"Katzfuss, M., Guinness, J. \"general framework Vecchia approximations Gaussian processes\", Statistical Science (2021) 36(1):124-141. Katzfuss, M., Guinness, J., Gong, W. Zilber, D. \"Vecchia approximations Gaussian-process predictions\", Journal Agricultural, Biological Environmental Statistics (2020) 25:383-414.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mprediction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multivariate Vecchia prediction — vecchia_Mprediction","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's locs <- as.matrix(soil[,1:2]) locsm <- list() locsm[[1]] <- locsm[[2]] <- locs locsp <- locsm locsp[[1]] <- locsp[[1]] + 0.5 locsp[[2]] <- locsp[[2]] - 0.5 soil.vap <- vecchia_Mspecify(locsm, m=10, locs.list.pred=locsp)  pseq <- create_param_sequence(2) # Initialize the vector of covariance parameters params <- rep(NA, pseq[5,2]) # Sigma parameters: params[pseq[1,1]:pseq[1,2]] <- c(100, 80) # Scale parameters: params[pseq[2,1]:pseq[2,2]] <- c(60, 50) # Smoothness parameters: params[pseq[3,1]:pseq[3,2]] <- c(0.5, 0.5) # Nuggets: params[pseq[4,1]:pseq[4,2]] <- c(30, 30) # Correlation: params[pseq[5,1]:pseq[5,2]] <- -0.9  soil.yhat <- vecchia_Mprediction(rnorm(nrow(locs)), soil.vap, params)"},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mspecify.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a multivariate Vecchia approximation — vecchia_Mspecify","title":"Specify a multivariate Vecchia approximation — vecchia_Mspecify","text":"Specifies multivariate Vecchia approximation later use likelihood evaluation prediction. function depend parameter values, run repeated likelihood evaluations. function multivariate version vecchia_specify.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mspecify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a multivariate Vecchia approximation — vecchia_Mspecify","text":"","code":"vecchia_Mspecify(   locs.list,   m,   locs.list.pred = NULL,   dist.func = NULL,   ordering.pred = c(\"obspred\", \"general\"),   pred.cond = c(\"independent\", \"general\") )"},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mspecify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a multivariate Vecchia approximation — vecchia_Mspecify","text":"locs.list List observed locations. element matrix containing locs corresponding outcome variable. m Number nearby points condition . locs.list.pred List locations make predictions. element matrix containing locs corresponding outcome variable. dist.func distance function signature dist(query_location, locations_matrix). Defaults Euclidean distance. ordering.pred \"obspred\" \"general\" ordering used prediction? See vecchia_specify. Defaults \"obspred\". pred.cond prediction conditioning \"general\" \"independent\"? See vecchia_specify. Defaults \"independent\".","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mspecify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify a multivariate Vecchia approximation — vecchia_Mspecify","text":"object specifies multivariate Vecchia approximation later use likelihood evaluation prediction.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mspecify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify a multivariate Vecchia approximation — vecchia_Mspecify","text":"function produce identical results vecchia_specify univariate problems, although fewer options. recommend vecchia_specify used univariate case.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mspecify.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Specify a multivariate Vecchia approximation — vecchia_Mspecify","text":"Katzfuss, M., Guinness, J. \"general framework Vecchia approximations Gaussian processes\", Statistical Science (2021) 36(1):124-141.","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/reference/vecchia_Mspecify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a multivariate Vecchia approximation — vecchia_Mspecify","text":"","code":"data(soil) soil <- soil[!is.na(soil[,5]),] # remove rows with NA's locs <- as.matrix(soil[,1:2]) locsm <- list() locsm[[1]] <- locsm[[2]] <- locs soil.va <- vecchia_Mspecify(locsm, m=10)"},{"path":"https://niehs.github.io/PrestoGP/reference/weather.html","id":null,"dir":"Reference","previous_headings":"","what":"Pressure and temperature forecast errors over the Pacific Northwest — weather","title":"Pressure and temperature forecast errors over the Pacific Northwest — weather","text":"meteorological dataset consists differences forecasted observed values temperature pressure 157 locations North American Pacific Northwest.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/weather.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pressure and temperature forecast errors over the Pacific Northwest — weather","text":"","code":"data(weather)"},{"path":"https://niehs.github.io/PrestoGP/reference/weather.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pressure and temperature forecast errors over the Pacific Northwest — weather","text":"data frame following columns: pressure: Difference forecasted observed pressure (Pa) temperature: Difference forecasted observed temperature (degrees C) lon: Longitude coordinate location lat: Latitude coordinate location","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/weather.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pressure and temperature forecast errors over the Pacific Northwest — weather","text":"data obtained Cliff Mass Jeff Baars University Washington Department Atmospheric Sciences. data set previously published \"RandomFields\" R package.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/weather.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pressure and temperature forecast errors over the Pacific Northwest — weather","text":"forecasts University Washington regional numerical weather prediction ensemble (UWME; Grimit Mass 2002; Eckel Mass 2005); valid December 18, 2003 4 pm local time, forecast horizon 48 hours.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/weather.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pressure and temperature forecast errors over the Pacific Northwest — weather","text":"Eckel, . F. Mass, C. F. \"Aspects effective mesoscale, short-range ensemble forecasting\", Weather Forecasting (2005) 20(3):328-350. Gneiting, T., Kleiber, W. Schlather, M. \"Matern cross-covariance functions multivariate random fields\", Journal American Statistical Association (2010) 105(491):1167-1177. Grimit, E. P. Mass, C. F. \"Initial results mesoscale short-range forecasting system Pacific Northwest\", Weather Forecasting 17(2):192-205.","code":""},{"path":"https://niehs.github.io/PrestoGP/reference/weather.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pressure and temperature forecast errors over the Pacific Northwest — weather","text":"Martin Schlather, School Business Informatics Mathematics, University Mannheim","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/news/index.html","id":"breaking-changes-0-2-0-9040","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"PrestoGP 0.2.0.9040 (2025-1-3)","text":"function create.param.sequence renamed create_param_sequence consistency function names parameter apanasovich renamed common_scale throughout package","code":""},{"path":"https://niehs.github.io/PrestoGP/news/index.html","id":"minor-improvements-0-2-0-9040","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"PrestoGP 0.2.0.9040 (2025-1-3)","text":"Tests updated reflect new common_scale parameter create_param_sequence function Fixed formatting issues NEWS.md","code":""},{"path":"https://niehs.github.io/PrestoGP/news/index.html","id":"documentation-fixes-0-2-0-9040","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION FIXES","title":"PrestoGP 0.2.0.9040 (2025-1-3)","text":"documentation create_param_seqence updated clarify extract/assign scale parameters one scale parameter per outcome documentation PrestoGP-Model-class prestogp_fit updated reflect new common_scale parameter","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/news/index.html","id":"minor-improvements-0-2-0-9039","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"PrestoGP 0.2.0.9039 (2024-12-26)","text":"Rewrote tests failing verions R","code":""},{"path":[]},{"path":"https://niehs.github.io/PrestoGP/news/index.html","id":"new-features-0-2-0-9038","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"PrestoGP 0.2.0.9038 (2024-12-23)","text":"Added method get_Y extract Y values (including imputed Y values) PrestoGP model Added method get_linear_model extract fitted cv.glmnet object PrestoGP model Added method plot_beta plot glide path regression coefficients","code":""},{"path":"https://niehs.github.io/PrestoGP/news/index.html","id":"minor-improvements-0-2-0-9038","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"PrestoGP 0.2.0.9038 (2024-12-23)","text":"Added NEWS.md file track changes update Modified show method print zero betas Modified prestogp_predict retun predictions form list multivariate models","code":""},{"path":"https://niehs.github.io/PrestoGP/news/index.html","id":"bug-fixes-0-2-0-9038","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"PrestoGP 0.2.0.9038 (2024-12-23)","text":"Fixed bug intercept calculation get_beta Fixed bug multivariate models variable names X assigned arbitrary variable names","code":""},{"path":"https://niehs.github.io/PrestoGP/news/index.html","id":"documentation-fixes-0-2-0-9038","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION FIXES","title":"PrestoGP 0.2.0.9038 (2024-12-23)","text":"Updated documention PrestoGPModel-class reflect Y_train slot updated contain imputed values model fitting Added documentation new methods","code":""}]
