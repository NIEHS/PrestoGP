% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PrestoGP_CreateU_Multivariate.R
\name{create_param_sequence}
\alias{create_param_sequence}
\title{Extract specific Matern parameters from a parameter sequence}
\usage{
create_param_sequence(P, ns = 1)
}
\arguments{
\item{P}{Number of outcome variables}

\item{ns}{Number of scale parameters}
}
\value{
A matrix with five rows and two columns as described below:
\describe{
\item{Row 1:}{Starting and ending indices for the sigma parameter(s)}
\item{Row 2:}{Starting and ending indices for the scale parameter(s)}
\item{Row 3:}{Starting and ending indices for the smoothness parameter(s)}
\item{Row 4:}{Starting and ending indices for the nugget(s)}
\item{Row 5:}{Starting and ending indices for the correlation parameter(s)}
}
}
\description{
This function is used to obtain specific Matern parameters (e.g.,
range or smoothness) from the covparams slot of a PrestoGPModel object.
}
\details{
This function is intended for advanced users who want to specify
the input Matern parameters for functions such as
\code{\link{vecchia_Mlikelihood}} or \code{\link{createUMultivariate}}.
To extract the Matern parameters from a fitted PrestoGP model, it is
strongly recommended to use \code{link{get_theta}} instead.
}
\examples{
# Space/elevation model
data(soil250, package="geoR")
y2 <- soil250[,7]               # predict pH level
X2 <- as.matrix(soil250[,c(4:6,8:22)])
# columns 1+2 are location coordinates; column 3 is elevation
locs2 <- as.matrix(soil250[,1:3])

soil.vm2 <- new("VecchiaModel", n_neighbors = 10)
# fit separate scale parameters for location and elevation
soil.vm2 <- prestogp_fit(soil.vm2, y2, X2, locs2, scaling = c(1, 1, 2))

pseq <- create_param_sequence(1, 2)
soil2.params <- soil.vm2@covparams
# sigma
soil2.params[pseq[1,1]:pseq[1,2]]
# scale parameters
soil2.params[pseq[2,1]:pseq[2,2]]
# smoothness parameter
soil2.params[pseq[3,1]:pseq[3,2]]
# nugget
soil2.params[pseq[4,1]:pseq[4,2]]

# Multivariate model
ym <- list()
ym[[1]] <- soil250[,4] # predict sand/silt portion of the sample
ym[[2]] <- soil250[,5]
ym[[3]] <- soil250[,6]
Xm <- list()
Xm[[1]] <- Xm[[2]] <- Xm[[3]] <- as.matrix(soil250[,7:22])
locsm <- list()
locsm[[1]] <- locsm[[2]] <- locsm[[3]] <- as.matrix(soil250[,1:3])

soil.mvm <-  new("MultivariateVecchiaModel", n_neighbors = 10)
soil.mvm <- prestogp_fit(soil.mvm, ym, Xm, locsm)

pseq <- create_param_sequence(3, 2)
soil.params <- soil.mvm@covparams
# sigmas
soil.params[pseq[1,1]:pseq[1,2]]
# scale parameters
scale.seq <- pseq[2,1]:pseq[2,2]
# scale parameter for location, outcome 1
soil.params[scale.seq[1]]
# scale parameter for elevation, outcome 1
soil.params[scale.seq[2]]
# scale parameter for location, outcome 2
soil.params[scale.seq[3]]
# scale parameter for elevation, outcome 2
soil.params[scale.seq[4]]
# scale parameter for location, outcome 3
soil.params[scale.seq[5]]
# scale parameter for elevation, outcome 3
soil.params[scale.seq[6]]
# smoothness parameters
soil.params[pseq[3,1]:pseq[3,2]]
# nuggets
soil.params[pseq[4,1]:pseq[4,2]]
# correlation
soil.corr <- diag(2) / 2
soil.corr[upper.tri(soil.corr)] <- soil.params[pseq[5,1]:pseq[5,2]]
soil.corr <- soil.corr + t(soil.corr)
}
\references{
\itemize{
\item Apanasovich, T.V., Genton, M.G. and Sun, Y. "A valid MatÃ©rn class of
cross-covariance functions for multivariate random fields with any number
of components", Journal of the American Statistical Association (2012)
107(497):180-193.
\item Genton, M.G. "Classes of kernels for machine learning: a statistics
perspective", The Journal of Machine Learning Research (2001) 2:299-312.
}
}
\seealso{
\code{\link{PrestoGPModel-class}}
}
